/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.22
 * Generated at: 2019-09-11 18:27:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Student/eclipse/jee-2019-06/eclipse/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/EmployeeHealthInsurance/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153403082000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1568207804638L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("  <div id=\"form\">\r\n");
      out.write("    <h2 class=\"text-center\">Register Employee</h2>\r\n");
      out.write("    <form name=\"register\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/registration\" method=\"post\">\r\n");
      out.write("      <input type=\"hidden\" id=\"currentPage\" name=\"currentPage\" value=\"register\">\r\n");
      out.write("      <fieldset>\r\n");
      out.write("        <legend>Employee Registration</legend>\r\n");
      out.write("        <label for=\"empName\">Employee Name</label>\r\n");
      out.write("        <input type=\"text\" name=\"empName\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"empNum\">Employee ID</label>\r\n");
      out.write("        <input type=\"number\" name=\"empNum\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"empDob\">Birth Date</label>\r\n");
      out.write("        <input type=\"Date\" name=\"empDob\"  placeholder=\"DD-MM-YYYY\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"empGender\">Gender </label>\r\n");
      out.write("        <input type=\"radio\" name=\"empGender\" value=\"male\"> Male\r\n");
      out.write("        <input type=\"radio\" name=\"empGender\" value=\"female\"> Female<br>\r\n");
      out.write("        <label for=\"empEmail\">Email </label>\r\n");
      out.write("        <input type=\"email\" name=\"empEmail\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"empAltEmail\">Alternate Email</label>\r\n");
      out.write("        <input type=\"email\" name=\"empAltEmail\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"empPhone\">Phone number </label>\r\n");
      out.write("        <input type=\"number\" name=\"empPhone\" min=\"1000000000\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"empAltPhone\">Alternate Phone </label>\r\n");
      out.write("        <input type=\"number\" name=\"empAltPhone\" min=\"1000000000\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("      </fieldset><br>\r\n");
      out.write("      <fieldset>\r\n");
      out.write("        <legend>Policy Information</legend>\r\n");
      out.write("        <label for=\"policyStart\">Policy Start Date </label>\r\n");
      out.write("        <input type=\"date\" name=\"policyStart\"  placeholder=\"DD-MM-YYYY\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"policyLen\">Policy Period </label>\r\n");
      out.write("        <input type=\"number\" name=\"policyLen\" placeholder=\"in years\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"policySum\">Total Sum Insured </label>\r\n");
      out.write("        <input type=\"number\" name=\"policySum\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"policyPremium\">Premium Amount </label>\r\n");
      out.write("        <input type=\"number\" name=\"policyPremium\" placeholder=\"per year\" disabled><br>\r\n");
      out.write("      </fieldset><br>\r\n");
      out.write("      <fieldset>\r\n");
      out.write("        <legend>Bank Information</legend>\r\n");
      out.write("        <label for=\"empBankNum\">Bank Account Number </label>\r\n");
      out.write("        <input type=\"text\" name=\"empBankNum\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"empBankName\">Bank Name </label>\r\n");
      out.write("        <input type=\"text\" name=\"empBankName\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("        <label for=\"empBankCode\">IFSC Code </label>\r\n");
      out.write("        <input type=\"text\" name=\"empBankCode\" required><span class=\"error-text\"> *</span><br>\r\n");
      out.write("      </fieldset>\r\n");
      out.write("      <div class=\"text-center\">\r\n");
      out.write("        <input type=\"submit\" value=\"Register\">\r\n");
      out.write("      </div>\r\n");
      out.write("    </form>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
